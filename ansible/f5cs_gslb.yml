---
- name: Get variable from AWS dynamic inventory
  hosts:  tag_Role_bigip
  connection: local
  vars_files: "../setup.yml"

  tasks:

    - name: Get all public IP addresses of the webservers (tagged as Application=NginxWebServer)
      run_once: true
      debug:
        msg: |
          Host      : {{ item }}
          Public IP : {{ hostvars[item].public_ip_address }}
      with_items: "{{ groups['tag_Role_bigip'] }}"


- name: Deploy F5 CLoud Service DNS Load Balancing 
  hosts:  localhost
  connection: local
  vars_files: "../setup.yml"  
  #vars:
  #  address_ipEndpoint_2: '3.127.197.104'

  tasks:

    - name: Get all private IP addresses of the webservers in a single list
      run_once: true
      set_fact:
        public_ip: "{{ hostvars[item].public_ip_address }}"
      with_items: "{{ groups['tag_Role_bigip'] }}"
    #- debug: var=public_ip


    - name: login to cloud services
      uri:
        url: https://{{ f5cs.api_url }}/{{ f5cs.api_version }}/svc-auth/login
        body: {"username":"{{ f5cs.username }}","password":"{{ f5cs.password }}"}
        method: POST
        body_format: json
      delegate_to: localhost
      register: cloud_access_token
    #- debug: var=cloud_access_token.json.access_token

    - name: get account details
      uri:
        url: https://{{ f5cs.api_url }}/{{ f5cs.api_version }}/svc-account/user
        headers: 
          Authorization: 'Bearer {{ cloud_access_token.json.access_token }}'
        method: GET
        body_format: json
      delegate_to: localhost
      register: user_info
    #- debug: var=user_info.json.primary_account_id

    - name: get subscriptions
      uri:
        url: https://{{ f5cs.api_url }}/{{ f5cs.api_version }}/svc-subscription/subscriptions?account_id={{ user_info.json.primary_account_id }}
        headers: 
          Authorization: 'Bearer {{ cloud_access_token.json.access_token }}'
        method: GET
        body_format: json
      delegate_to: localhost
      register: subscription_info
    #- debug: var=subscription_info


    - name: get catalogue items
      uri:
        url: https://{{ f5cs.api_url }}/{{ f5cs.api_version }}/svc-catalog/catalogs
        headers: 
          Authorization: 'Bearer {{ cloud_access_token.json.access_token }}'
        method: GET
        body_format: json
      delegate_to: localhost
      register: catalogue_info
    #- debug: var=catalogue_info.json.Catalogs
 

    - name: Get catalog ID for DNS service
      set_fact:
        catalog_id: "{{ item.catalog_id }}"
      with_items:
        "{{ catalogue_info.json.Catalogs | json_query(query) }}"
      vars: 
        query: "[].{name: name, catalog_id: catalog_id} | [?name=='DNS Load Balancer']"
    #- debug: var=catalog_id

    - name: send create request
      uri:
        url: https://{{ f5cs.api_url }}/{{ f5cs.api_version }}/svc-subscription/subscriptions
        headers:
          Authorization: 'Bearer {{ cloud_access_token.json.access_token }}'
        method: POST
        body_format: json
        body: "{{ lookup('template','templates/f5cs_gslb.json') }}"
      delegate_to: localhost
      register: create_output
    #- debug: var=create_output.json.subscription_id

    - name: Activate new zone
      uri:
        url: https://{{ f5cs.api_url }}/{{ f5cs.api_version }}/svc-subscription/subscriptions/{{ create_output.json.subscription_id }}/activate
        headers: 
          Authorization: 'Bearer {{ cloud_access_token.json.access_token }}'
        method: POST
      delegate_to: localhost
      register: activate_output
    #- debug: var=activate_output
